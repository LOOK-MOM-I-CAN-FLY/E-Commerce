name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # ---------- NEW: нормализуем имя образа ----------
    - name: Set image name (lower-case)
      id: vars
      run: |
        IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/app" | tr '[:upper:]' '[:lower:]')
        echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_ENV"
        echo "Image will be pushed as $IMAGE_NAME"
    # теперь ${{ env.IMAGE_NAME }} доступна всем последующим шагам

    # ---------- Go тесты ----------
    - uses: actions/setup-go@v5
      with:
        go-version: "1.23"

    - name: Cache modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Run unit tests
      run: go test ./...

    # ---------- Docker build & push ----------
    - uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.IMAGE_NAME }}:latest

    # ---------- (опционально) deploy ----------
    - name: Deploy to VPS
      if: github.ref == 'refs/heads/main' && env.VPS_HOST != ''
      uses: appleboy/ssh-action@v1
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}            # пусто? шаг пропустится
      with:
        host: ${{ env.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          cd /opt/digital-marketplace
          docker compose pull
          docker compose up -d --remove-orphans
