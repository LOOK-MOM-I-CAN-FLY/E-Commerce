server {
    listen 80;
    server_name localhost;

    # Редирект на HTTPS (раскомментировать при настроенном SSL)
    # return 301 https://$host$request_uri;

    # Логирование
    access_log /var/log/nginx/marketplace_access.log;
    error_log /var/log/nginx/marketplace_error.log;

    # Блокировка доступа к скрытым файлам и директориям
    location ~ /\. {
        deny all;
        return 404;
        access_log off;
        log_not_found off;
    }

    # Блокировка доступа к файлу .env
    location ~ \.env {
        deny all;
        return 404;
        access_log off;
        log_not_found off;
    }

    # Liveness проверка для Docker healthcheck
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    # Обработка статических файлов
    location /static/ {
        alias /app/web/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Обработка загруженных файлов
    # Важно: не даем прямой доступ к загруженным файлам
    # Проверка должна осуществляться через приложение
    location /images/ {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проксирование всех остальных запросов к приложению
    location / {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Настройка для WebSocket если это необходимо
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# HTTPS сервер (раскомментировать, когда сертификаты будут готовы)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#
#     # SSL-сертификаты
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     # Оптимизация SSL
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#
#     # HSTS (раскомментировать после тестирования)
#     # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
#
#     # Логирование
#     access_log /var/log/nginx/marketplace_access.log;
#     error_log /var/log/nginx/marketplace_error.log;
#
#     # Блокировка доступа к скрытым файлам и директориям
#     location ~ /\. {
#         deny all;
#         return 404;
#         access_log off;
#         log_not_found off;
#     }
#
#     # Блокировка доступа к файлу .env
#     location ~ \.env {
#         deny all;
#         return 404;
#         access_log off;
#         log_not_found off;
#     }
#
#     # Liveness проверка для Docker healthcheck
#     location /health {
#         access_log off;
#         add_header Content-Type text/plain;
#         return 200 'OK';
#     }
#
#     # Обработка статических файлов
#     location /static/ {
#         alias /app/web/static/;
#         expires 30d;
#         add_header Cache-Control "public, max-age=2592000";
#     }
#
#     # Обработка загруженных файлов через приложение
#     location /images/ {
#         proxy_pass http://app:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     # Проксирование всех остальных запросов к приложению
#     location / {
#         proxy_pass http://app:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # Настройка для WebSocket если это необходимо
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#
#         # Таймауты
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
# } 